function f = cartPoleControl(states,params)
%unpack params
mc = params.mc;
mp = params.mp;
l = params.l;
g = params.g;

%unpack states
x = states(1);
theta = states(2);
xdot = states(3);
thetadot = states(4);

%cart-pole LQR
Q = 10.*eye(4);
R = 1;
rho = 2;    %threshold below which the controller switches to LQR

theta0 = pi;
thetadot0 = 0;

H(1,1) = mc + mp;
H(1,2) = mp.*l.*cos(theta0);
H(2,1) = mp.*l.*cos(theta0);
H(2,2) = mp.*l.^2;

C = zeros(2);
C(1,2) = -mp.*l.*thetadot0.*sin(theta0);

G = [0; mp.*g.*l.*sin(theta0)];
Bd = [1; 0];

dGdq = zeros(2);
dGdq (2,2) = mp.*g.*l.*cos(theta0);

A(1:2,1:2) = 0;
A(1:2,3:4) = eye(2);
A(3:4,1:2) = -H\dGdq;
A(3:4,3:4) = -H\C;

B = zeros(4,1);
B(3:4) = H\Bd;

[K,S,E] = lqr(A,B,Q,R);

%CONTROLLER PARAMETERS
ke = 1;    %energy
kp = 1;    %proportional (for cart position)
kd = 1;     %derivative (for cart speed)

%energy shaping
Ed = mp.*g.*l;
E = (1/2).*(mc+mp).*xdot.^2 + mp.*l.*xdot.*thetadot.*cos(theta) + (1/2).*mp.^l.^2.*thetadot.^2 - mp.*g.*l.*cos(theta);
Etilda = E - Ed;

%control law
f = ke.*cos(theta).*thetadot.*Etilda - kp.*x - kd.*xdot;
end